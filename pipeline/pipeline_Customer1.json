{
	"name": "pipeline_Customer1",
	"properties": {
		"activities": [
			{
				"name": "Copy from Source to Destination",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference",
						"parameters": {
							"tableNameAZureDataSet": {
								"value": "@pipeline().parameters.tableNamePipeline",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "AzureSqlTable1_dest",
						"type": "DatasetReference",
						"parameters": {
							"tableNameAZureDataSet": {
								"value": "@pipeline().parameters.tableNamePipelineDest",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "LogError",
				"description": "",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy from Source to Destination",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_UpdatePipelineLogErrors]",
					"storedProcedureParameters": {
						"copyDuration_in_secs": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.copyDuration}",
								"type": "Expression"
							},
							"type": "String"
						},
						"DataFactory_Name": {
							"value": {
								"value": "@{pipeline().DataFactory}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Destination": {
							"value": {
								"value": "ds_sqldb_rawdb_table_Product_dev",
								"type": "Expression"
							},
							"type": "String"
						},
						"effectiveIntegrationRuntime": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.effectiveIntegrationRuntime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorCode": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorDescription": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorLoggedTime": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "String"
						},
						"Execution_Status": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].status}",
								"type": "Expression"
							},
							"type": "String"
						},
						"FailureType": {
							"value": {
								"value": "@concat(activity('Copy from Source to Destination').error.message,'failureType:',activity('Copy from Source to Destination').error.failureType)",
								"type": "Expression"
							},
							"type": "String"
						},
						"No_ParallelCopies": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.usedParallelCopies}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Pipeline_Name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunId": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Sink_Type": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].sink.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source": {
							"value": {
								"value": "ds_sqldb_adventureLT_view_vAllProducts_dev ",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source_Type": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].source.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerId": {
							"value": {
								"value": "@{pipeline().TriggerId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@{pipeline().TriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerType": {
							"value": {
								"value": "@{pipeline().TriggerType}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqldb_dbraw_dev",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LogSuccess",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy from Source to Destination",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_UpdatePipelineLogSuccess]",
					"storedProcedureParameters": {
						"CopyActivity_End_Time": {
							"value": {
								"value": "@{utcnow()}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyActivity_queuingDuration_in_secs": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0]. detailedDurations.queuingDuration}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyActivity_Start_Time": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].start}",
								"type": "Expression"
							},
							"type": "String"
						},
						"CopyActivity_transferDuration_in_secs": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0]. detailedDurations.transferDuration}",
								"type": "Expression"
							},
							"type": "String"
						},
						"copyDuration_in_secs": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.copyDuration}",
								"type": "Expression"
							},
							"type": "String"
						},
						"DataFactory_Name": {
							"value": {
								"value": "@{pipeline().DataFactory}",
								"type": "Expression"
							},
							"type": "String"
						},
						"DataRead": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.rowsRead}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Destination": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].sink}",
								"type": "Expression"
							},
							"type": "String"
						},
						"effectiveIntegrationRuntime": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.effectiveIntegrationRuntime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Execution_Status": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].status}",
								"type": "Expression"
							},
							"type": "String"
						},
						"No_ParallelCopies": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.usedParallelCopies}",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"Pipeline_Name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"rowsCopied": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.rowsCopied}",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunID": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Sink_Type": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].sink.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].source}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Source_Type": {
							"value": {
								"value": "@{activity('Copy from Source to Destination').output.executionDetails[0].source.type}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerId": {
							"value": {
								"value": "@{pipeline().TriggerId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@{pipeline().TriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerType": {
							"value": {
								"value": "@{pipeline().TriggerType}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqldb_dbraw_dev",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			}
		],
		"parameters": {
			"tableNamePipeline": {
				"type": "string",
				"defaultValue": "vAngraficaCustomer"
			},
			"tableNamePipelineDest": {
				"type": "string",
				"defaultValue": "Customer"
			}
		},
		"variables": {
			"start": {
				"type": "Boolean",
				"defaultValue": true
			}
		},
		"folder": {
			"name": "Gio"
		},
		"annotations": []
	}
}