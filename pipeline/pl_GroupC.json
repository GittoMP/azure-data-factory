{
	"name": "pl_GroupC",
	"properties": {
		"activities": [
			{
				"name": "lookup_GetPipelineToBeExecuted",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[sp_GetPipelinePlan]",
						"storedProcedureParameters": {
							"PipelineName": {
								"type": "String",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sqldb_migration",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Execute each pipeline per group",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "lookup_GetPipelineToBeExecuted",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lookup_GetPipelineToBeExecuted').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "copy_GroupC",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "setvar_StartPipelineExecutionDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "select * from @{item().Procedure}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_sqldb_my_italy_new",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_sqldb_raw",
									"type": "DatasetReference",
									"parameters": {
										"DestinationTableName": {
											"value": "@item().Destination",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "setvar_StartPipelineExecutionDate",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "varStartPipelineExecutionDate",
								"value": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						},
						{
							"name": "sp_UpdateLogEvents_OnError",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "copy_GroupC",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_UpdatePipelineLogEvents]",
								"storedProcedureParameters": {
									"DropName": {
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionNumber": {
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"InError": {
										"value": "Yes",
										"type": "String"
									},
									"PipelineGroupNameId": {
										"value": {
											"value": "@item().GroupPlanId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"PipelineName": {
										"value": {
											"value": "@item().PipelineName",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineOrchestratorId": {
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"StartExecutionDate": {
										"value": {
											"value": "@formatDateTime(variables('varStartPipelineExecutionDate'))",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"StopExecutionDate": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_migration",
								"type": "LinkedServiceReference",
								"parameters": {
									"ServerName": "sql-server-manpower-dev.database.windows.net",
									"DatabaseName": "sqldb-migration"
								}
							}
						},
						{
							"name": "sp_UpdateLogEvents_OnSuccess",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "copy_GroupC",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_UpdateLogEvents]",
								"storedProcedureParameters": {
									"DropName": {
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionConfigurationId": {
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionNumber": {
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"GroupPlanId": {
										"value": {
											"value": "@item().GroupPlanId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"InError": {
										"value": "No",
										"type": "String"
									},
									"PipelineName": {
										"value": {
											"value": "@item().PipelineName",
											"type": "Expression"
										},
										"type": "String"
									},
									"StartExecutionDate": {
										"value": {
											"value": "@formatDateTime(variables('varStartPipelineExecutionDate'))",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"StopExecutionDate": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_migration",
								"type": "LinkedServiceReference",
								"parameters": {
									"ServerName": "sql-server-manpower-dev.database.windows.net",
									"DatabaseName": "sqldb-migration"
								}
							}
						},
						{
							"name": "sp_UpdateLogEvents_OnFailed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "sp_UpdateLogEvents_OnError",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_UpdateLogEvents]",
								"storedProcedureParameters": {
									"DropName": {
										"value": {
											"value": "@pipeline().parameters.parDropName",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionConfigurationId": {
										"value": {
											"value": "@pipeline().parameters.parExecutionConfigurationId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionNumber": {
										"value": {
											"value": "@pipeline().parameters.parExecutionNumber",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"GroupPlanId": {
										"value": {
											"value": "@item().GroupPlanId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"InError": {
										"value": "Yes",
										"type": "String"
									},
									"PipelineName": {
										"value": {
											"value": "@item().PipelineName",
											"type": "Expression"
										},
										"type": "String"
									},
									"StartExecutionDate": {
										"value": {
											"value": "@formatDateTime(variables('varStartPipelineExecutionDate'))",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"StopExecutionDate": {
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										},
										"type": "DateTime"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_migration",
								"type": "LinkedServiceReference",
								"parameters": {
									"ServerName": "sql-server-manpower-dev.database.windows.net",
									"DatabaseName": "sqldb-migration"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"parExecutionConfigurationId": {
				"type": "int"
			},
			"parDropId": {
				"type": "int"
			},
			"parDropName": {
				"type": "string"
			},
			"parExecutionNumber": {
				"type": "int"
			},
			"parNewExecution": {
				"type": "bool"
			},
			"parPlanId": {
				"type": "int"
			}
		},
		"variables": {
			"varStartPipelineExecutionDate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Prototype/Sequential Groups"
		},
		"annotations": []
	}
}